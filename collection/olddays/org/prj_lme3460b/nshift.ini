//判断偏移数组
if (ROBOIntlvPara.ROBOCopyNum == 1)
  {
    for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
      {
        CyclicShift[i] = 0;
      }
  }
 else if (ROBOIntlvPara.ROBOCopyNum == 2)
   {
     if (BitsInLastSymbol <= BitsInSegment)
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = 0;
           }
       }
     else
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = i;
           }
       }
   }
//新加入3次模式
 else if (ROBOIntlvPara.ROBOCopyNum == 3)
   {
     if (BitsInLastSymbol <= (2 * BitsInSegment))
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = 0;
           }
       }
     else
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = i;
           }
       }
   }

 else if (ROBOIntlvPara.ROBOCopyNum == 4)
   {
     if (BitsInLastSymbol <= BitsInSegment)
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = 0;
           }
       }
     else if ((BitsInLastSymbol <= (2 * BitsInSegment))&&(BitsInLastSymbol > BitsInSegment))
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum/2; i++)
           {
             CyclicShift[i] = 0;
           }
         for (i = ROBOIntlvPara.ROBOCopyNum/2; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = 1;
           }
       }
     else if ((BitsInLastSymbol <= (3 * BitsInSegment))&&(BitsInLastSymbol > (2 * BitsInSegment)))
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = 0;
           }
       }
     else
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = i;
           }
       }
   }
 else if(ROBOIntlvPara.ROBOCopyNum == 5)
   {
     if (BitsInLastSymbol <= (4 * BitsInSegment))
       {
         for(i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = 0;
           }
       }
     else
       {
         for(i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = i;
           }
       }
   }
//新加入6次模式
 else if (ROBOIntlvPara.ROBOCopyNum == 6)
   {
     //目前为(x<1段)和(4段<x<5段),表现为(0,0,0,0,0,0)
     if ((BitsInLastSymbol <= BitsInSegment) || ((BitsInLastSymbol <= 5 * BitsInSegment)&&(BitsInLastSymbol > 4 * BitsInSegment)))
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = 0;
           }
       }
     //目前为(1段<x<2段)或(3段<x<4段),表现为(0,0,0,1,1,1)
     else if (((BitsInLastSymbol <= 2 * BitsInSegment)&&(BitsInLastSymbol > BitsInSegment)) || ((BitsInLastSymbol <= 4 * BitsInSegment)&&(BitsInLastSymbol > 3 * BitsInSegment)))
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = (uWord16)(i / 3);
           }
       }
     //目前为(2段<x<3段),表现为(0,0,1,1,2,2)
     else if ((BitsInLastSymbol <= (3 * BitsInSegment))&&(BitsInLastSymbol > (2 * BitsInSegment)))
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = (uWord16)(i / 2);
           }
       }
     //目前为(5段<x<6段),表现为(0,1,2,3,4,5)
     else
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = i;
           }
       }
   }
 else if (ROBOIntlvPara.ROBOCopyNum == 7)
   {
     if (BitsInLastSymbol <= (6 * BitsInSegment))
       {
         for(i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = 0;
           }
       }
     else
       {
         for(i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = i;
           }
       }
   }

//新加入8次模式
 else if (ROBOIntlvPara.ROBOCopyNum == 8)
   {
     //目前为(x<1段)和(2段<x<3段),(4段<x<5段),(6段<x<7段),表现为(0,0,0,0,0,0,0,0)
     if ((BitsInLastSymbol <= BitsInSegment) || ((BitsInLastSymbol <= 3 * BitsInSegment)&&(BitsInLastSymbol > 2 * BitsInSegment)) || ((BitsInLastSymbol <= 5 * BitsInSegment)&&(BitsInLastSymbol > 4 * BitsInSegment)) || ((BitsInLastSymbol <= 7 * BitsInSegment)&&(BitsInLastSymbol > 6 * BitsInSegment)))
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = 0;
           }
       }
     //目前为(1段<x<2段)和(5段<x<6段),表现为(0,0,0,0,1,1,1,1)
     else if (((BitsInLastSymbol <= 2 * BitsInSegment)&&(BitsInLastSymbol > BitsInSegment)) || ((BitsInLastSymbol <= 6 * BitsInSegment)&&(BitsInLastSymbol > 5 * BitsInSegment)))
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = (uWord16)(i / 4);
           }
       }
     //目前为(3段<x<4段),表现为(0,0,1,1,2,2,3,3)
     else if ((BitsInLastSymbol <= (4 * BitsInSegment))&&(BitsInLastSymbol > (3 * BitsInSegment)) )
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = (uWord16)(i / 2);
           }
       }
     //目前为(7段<x<8段),表现为(0,1,2,3,4,5,6,7)
     else
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = i;
           }
       }
   }


//新加入9次模式
 else if (ROBOIntlvPara.ROBOCopyNum == 9)
   {
     //目前为(x<1段),(1段<x<2段),(3段<x<4段),(4段<x<5段),(6段<x<7段),(7段<x<8段)表现为(0,0,0,0,0,0,0,0,0)
     if ((BitsInLastSymbol <= 2 * BitsInSegment) || ((BitsInLastSymbol <= 5 * BitsInSegment)&&(BitsInLastSymbol > 3 * BitsInSegment)) || ((BitsInLastSymbol <= 8 * BitsInSegment)&&(BitsInLastSymbol > 6 * BitsInSegment)))
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = 0;
           }
       }
     //目前为(2段<x<3段),(5段<x<6段),表现为(0,0,0,1,1,1,2,2,2)
     else if (((BitsInLastSymbol <= 3 * BitsInSegment)&&(BitsInLastSymbol > 2 * BitsInSegment)) || ((BitsInLastSymbol <= 6 * BitsInSegment)&&(BitsInLastSymbol > 5 * BitsInSegment)))
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = (uWord16)(i / 3);
           }
       }
     //目前为(8段<x<9段),表现为(0,1,2,3,4,5,6,7,8)
     else
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = i;
           }
       }
   }

//新加入10次模式
 else if (ROBOIntlvPara.ROBOCopyNum == 10)
   {
     //目前为(x<1段),(2段<x<3段),(6段<x<7段),(8段<x<9段),表现为(0,0,0,0,0,0,0,0,0,0)
     if ((BitsInLastSymbol <= BitsInSegment) || ((BitsInLastSymbol <= 3 * BitsInSegment)&&(BitsInLastSymbol > 2 * BitsInSegment)) || ((BitsInLastSymbol <= 7 * BitsInSegment)&&(BitsInLastSymbol > 6 * BitsInSegment)) || ((BitsInLastSymbol <= 9 * BitsInSegment)&&(BitsInLastSymbol > 8 * BitsInSegment)))
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = 0;
           }
       }
     //目前为(1段<x<2段),(3段<x<4段),(5段<x<6段),(7段<x<8段)表现为(0,0,0,0,0,1,1,1,1,1)
     else if (((BitsInLastSymbol <= 2 * BitsInSegment)&&(BitsInLastSymbol > BitsInSegment)) || ((BitsInLastSymbol <= 4 * BitsInSegment)&&(BitsInLastSymbol > 3 * BitsInSegment)) || ((BitsInLastSymbol <= 6 * BitsInSegment)&&(BitsInLastSymbol > 5 * BitsInSegment)) || ((BitsInLastSymbol <= 8 * BitsInSegment)&&(BitsInLastSymbol > 7 * BitsInSegment)))
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = (uWord16)(i / 5);
           }
       }
     //目前为(4段<x<5段),表现为(0,0,1,1,2,2,3,3,4,4)
     else if ((BitsInLastSymbol <= 5 * BitsInSegment)&&(BitsInLastSymbol > 4 * BitsInSegment))
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = (uWord16)(i / 2);
           }
       }

     //目前为(9段<x<10段),表现为(0,1,2,3,4,5,6,7,8,9)
     else
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = i;
           }
       }
   }


 else if (ROBOIntlvPara.ROBOCopyNum == 11)
   {
     if (BitsInLastSymbol <= (10 * BitsInSegment))
       {
         for(i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = 0;
           }
       }
     else
       {
         for(i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = i;
           }
       }
   }

//新加入12次模式
 else if (ROBOIntlvPara.ROBOCopyNum == 12)
   {
     //目前为(x<1段),(4段<x<5段),(6段<x<7段),(10段<x<11段)表现为(0,0,0,0,0,0,0,0,0,0,0,0)
     if ((BitsInLastSymbol <= BitsInSegment) || ((BitsInLastSymbol <= 5 * BitsInSegment)&&(BitsInLastSymbol > 4 * BitsInSegment)) || ((BitsInLastSymbol <= 7 * BitsInSegment)&&(BitsInLastSymbol > 6 * BitsInSegment)) || ((BitsInLastSymbol <= 11 * BitsInSegment)&&(BitsInLastSymbol > 10 * BitsInSegment)))
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = 0;
           }
       }
     //目前为(1段<x<2段),(9段<x<10段)表现为(0,0,0,0,0,0,1,1,1,1,1,1)
     else if (((BitsInLastSymbol <= 2 * BitsInSegment)&&(BitsInLastSymbol > BitsInSegment)) || ((BitsInLastSymbol <= 10 * BitsInSegment)&&(BitsInLastSymbol > 9 * BitsInSegment)))
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = (uWord16)(i / 6);
           }
       }
     //目前为(2段<x<3段),(8段<x<9段),表现为(0,0,0,0,1,1,1,1,2,2,2,2)
     else if (((BitsInLastSymbol <= 3 * BitsInSegment)&&(BitsInLastSymbol > 2 * BitsInSegment)) || ((BitsInLastSymbol <= 9 * BitsInSegment)&&(BitsInLastSymbol > 8 * BitsInSegment)))
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = (uWord16)(i / 4);
           }
       }
     //目前为(3段<x<4段),(7段<x<8段),表现为(0,0,0,1,1,1,2,2,2,3,3,3)
     else if (((BitsInLastSymbol <= 4 * BitsInSegment)&&(BitsInLastSymbol > 3 * BitsInSegment)) || ((BitsInLastSymbol <= 8 * BitsInSegment)&&(BitsInLastSymbol > 7 * BitsInSegment)))
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = (uWord16)(i / 3);
           }
       }
     //目前为(5段<x<6段),表现为(0,0,1,1,2,2,3,3,4,4,5,5)
     else if ((BitsInLastSymbol <= 6 * BitsInSegment)&&(BitsInLastSymbol > 5 * BitsInSegment))
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = (uWord16)(i / 2);
           }
       }
     //目前为(11段<x<12段),表现为(0,1,2,3,4,5,6,7,8,9,10,11)
     else
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = i;
           }
       }
   }

//新加入13次模式
 else if (ROBOIntlvPara.ROBOCopyNum == 13)
   {
     if (BitsInLastSymbol <= (12 * BitsInSegment))
       {
         for(i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = 0;
           }
       }
     else
       {
         for(i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = i;
           }
       }
   }

//新加入14次模式
 else if (ROBOIntlvPara.ROBOCopyNum == 14)
   {
     //目前为(x<1段),(2段<x<3段),(4段<x<5段),(8段<x<9段),(10段<x<11段),(12段<x<13段)表现为(0,0,0,0,0,0,0,0,0,0,0,0,0,0)
     if ((BitsInLastSymbol <= BitsInSegment) || ((BitsInLastSymbol <= 3 * BitsInSegment)&&(BitsInLastSymbol > 2 * BitsInSegment)) || ((BitsInLastSymbol <= 5 * BitsInSegment)&&(BitsInLastSymbol > 4 * BitsInSegment)) || ((BitsInLastSymbol <= 9 * BitsInSegment)&&(BitsInLastSymbol > 8 * BitsInSegment)) || ((BitsInLastSymbol <= 11 * BitsInSegment)&&(BitsInLastSymbol > 10 * BitsInSegment)) || ((BitsInLastSymbol <= 13 * BitsInSegment)&&(BitsInLastSymbol > 12 * BitsInSegment)))
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = 0;
           }
       }
     //目前为(1段<x<2段),(3段<x<4段),(5段<x<6段),(7段<x<8段),(9段<x<10段),(11段<x<12段)表现为(0,0,0,0,0,0,0,1,1,1,1,1,1,1)
     else if (((BitsInLastSymbol <= 2 * BitsInSegment)&&(BitsInLastSymbol > BitsInSegment)) || ((BitsInLastSymbol <= 4 * BitsInSegment)&&(BitsInLastSymbol > 3 * BitsInSegment)) || ((BitsInLastSymbol <= 6 * BitsInSegment)&&(BitsInLastSymbol > 5 * BitsInSegment)) || ((BitsInLastSymbol <= 8 * BitsInSegment)&&(BitsInLastSymbol > 7 * BitsInSegment)) || ((BitsInLastSymbol <= 10 * BitsInSegment)&&(BitsInLastSymbol > 9 * BitsInSegment)) || ((BitsInLastSymbol <= 12 * BitsInSegment)&&(BitsInLastSymbol > 11 * BitsInSegment)))
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = (uWord16)(i / 7);
           }
       }
     //目前为(6段<x<7段),表现为(0,0,1,1,2,2,3,3,4,4,5,5,6,6)
     else if ((BitsInLastSymbol <= 7 * BitsInSegment)&&(BitsInLastSymbol > 6 * BitsInSegment))
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = (uWord16)(i / 2);
           }
       }
     //目前为(13段<x<14段),表现为(0,1,2,3,4,5,6,7,8,9,10,11,12,13)
     else
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = i;
           }
       }
   }

//新加入15次模式
 else if (ROBOIntlvPara.ROBOCopyNum == 15)
   {
     //目前为(x<1段),(1段<x<2段),(3段<x<4段),(6段<x<7段),(7段<x<8段),(10段<x<11段),(12段<x<13段),(13段<x<14段),表现为(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
     if ((BitsInLastSymbol <= 2 * BitsInSegment) || ((BitsInLastSymbol <= 4 * BitsInSegment)&&(BitsInLastSymbol > 3 * BitsInSegment)) || ((BitsInLastSymbol <= 8 * BitsInSegment)&&(BitsInLastSymbol > 6 * BitsInSegment)) || ((BitsInLastSymbol <= 11 * BitsInSegment)&&(BitsInLastSymbol > 10 * BitsInSegment)) || ((BitsInLastSymbol <= 14 * BitsInSegment)&&(BitsInLastSymbol > 13 * BitsInSegment)))
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = 0;
           }
       }
     //目前为(2段<x<3段),(5段<x<6段),(8段<x<9段),(11段<x<12段)表现为(0,0,0,0,0,1,1,1,1,1,2,2,2,2,2)
     else if (((BitsInLastSymbol <= 3 * BitsInSegment)&&(BitsInLastSymbol > 2 * BitsInSegment)) || ((BitsInLastSymbol <= 6 * BitsInSegment)&&(BitsInLastSymbol > 5 * BitsInSegment)) || ((BitsInLastSymbol <= 9 * BitsInSegment)&&(BitsInLastSymbol > 8 * BitsInSegment)) || ((BitsInLastSymbol <= 8 * BitsInSegment)&&(BitsInLastSymbol > 7 * BitsInSegment)) || ((BitsInLastSymbol <= 10 * BitsInSegment)&&(BitsInLastSymbol > 9 * BitsInSegment)) || ((BitsInLastSymbol <= 12 * BitsInSegment)&&(BitsInLastSymbol > 11 * BitsInSegment)))
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = (uWord16)(i / 5);
           }
       }
     //目前为(4段<x<5段),(9段<x<10段),表现为(0,0,0,1,1,1,2,2,2,3,3,3,4,4,4)
     else if (((BitsInLastSymbol <= 5 * BitsInSegment)&&(BitsInLastSymbol > 4 * BitsInSegment)) || ((BitsInLastSymbol <= 10 * BitsInSegment)&&(BitsInLastSymbol > 9 * BitsInSegment)))
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = (uWord16)(i / 3);
           }
       }
     //目前为(14段<x<15段),表现为(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14)
     else
       {
         for (i = 0; i < ROBOIntlvPara.ROBOCopyNum; i++)
           {
             CyclicShift[i] = i;
           }
       }
